{"version":3,"sources":["components/LoginPage.js","components/Dashboard.js","App.js","index.js"],"names":["LoginPage","_ref","onLoginSuccess","username","setUsername","useState","password","setPassword","_jsxs","children","_jsx","type","placeholder","value","onChange","e","target","onClick","handleLogin","fetch","method","then","res","text","response","alert","Dashboard","data","setData","useEffect","App","isLoggedIn","setIsLoggedIn","handleLoginSuccess","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"yKAyCeA,MAtCf,SAAkBC,GAAsB,IAArB,eAAEC,GAAgBD,EACnC,MAAOE,EAAUC,GAAeC,mBAAS,KAClCC,EAAUC,GAAeF,mBAAS,IAgBzC,OACEG,eAAA,OAAAC,SAAA,CACEC,cAAA,MAAAD,SAAI,UACJC,cAAA,SACEC,KAAK,OACLC,YAAY,WACZC,MAAOV,EACPW,SAAUC,GAAKX,EAAYW,EAAEC,OAAOH,SAEtCH,cAAA,SACEC,KAAK,WACLC,YAAY,WACZC,MAAOP,EACPQ,SAAUC,GAAKR,EAAYQ,EAAEC,OAAOH,SAEtCH,cAAA,UAAQO,QA7BQC,KAClBC,MAAM,uBAAyBhB,EAAW,aAAeG,EAAU,CACjEc,OAAQ,SAETC,KAAKC,GAAOA,EAAIC,QAChBF,KAAKG,IACa,sBAAbA,EACFtB,IAEAuB,MAAM,2BAoBqBhB,SAAC,YAGpC,ECjBeiB,MAnBf,WACE,MAAOC,EAAMC,GAAWvB,mBAAS,IAUjC,OARAwB,oBAAU,KACRV,MAAM,4BACHE,KAAKC,GAAOA,EAAIC,QAChBF,KAAKG,IACJI,EAAQJ,MAEX,IAGDhB,eAAA,OAAAC,SAAA,CACEC,cAAA,MAAAD,SAAI,mBACJC,cAAA,KAAAD,SAAIkB,MAGV,ECDeG,MAdf,WACE,MAAOC,EAAYC,GAAiB3B,oBAAS,GAM7C,OACEK,cAAA,OAAAD,SACIsB,EAAiErB,cAACgB,EAAS,IAA9DhB,cAACV,EAAS,CAACE,eANH+B,KACzBD,GAAc,OAQlB,E,KCXAE,IAASC,OACPzB,cAAC0B,IAAMC,WAAU,CAAA5B,SACfC,cAACoB,EAAG,MAENQ,SAASC,eAAe,Q","file":"static/js/main.2502c6bd.chunk.js","sourcesContent":["\nimport React, { useState } from 'react';\n\nfunction LoginPage({ onLoginSuccess }) {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleLogin = () => {\n    fetch('/api/login?username=' + username + '&password=' + password, {\n      method: 'POST',\n    })\n    .then(res => res.text())\n    .then(response => {\n      if (response === \"Login Successful!\") {\n        onLoginSuccess();\n      } else {\n        alert(\"Invalid credentials!\");\n      }\n    });\n  };\n\n  return (\n    <div>\n      <h2>Login</h2>\n      <input\n        type=\"text\"\n        placeholder=\"Username\"\n        value={username}\n        onChange={e => setUsername(e.target.value)}\n      />\n      <input\n        type=\"password\"\n        placeholder=\"Password\"\n        value={password}\n        onChange={e => setPassword(e.target.value)}\n      />\n      <button onClick={handleLogin}>Login</button>\n    </div>\n  );\n}\n\nexport default LoginPage;\n","\nimport React, { useState, useEffect } from 'react';\n\nfunction Dashboard() {\n  const [data, setData] = useState('');\n\n  useEffect(() => {\n    fetch('/simple-project/api/data')\n      .then(res => res.text())\n      .then(response => {\n        setData(response);\n      });\n  }, []);\n\n  return (\n    <div>\n      <h2>Data Dashboard</h2>\n      <p>{data}</p>\n    </div>\n  );\n}\n\nexport default Dashboard;\n","\nimport React, { useState } from 'react';\nimport LoginPage from './components/LoginPage';\nimport Dashboard from './components/Dashboard';\n\nfunction App() {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  const handleLoginSuccess = () => {\n    setIsLoggedIn(true);\n  };\n\n  return (\n    <div>\n      {!isLoggedIn ? <LoginPage onLoginSuccess={handleLoginSuccess} /> : <Dashboard />}\n    </div>\n  );\n}\n\nexport default App;\n","\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}